Tasks
-----

DONE Code SensorData (environment and ego)
DONE Code Behavior class (ignore the Road dependency)
DONE Move Point to Trajectory file.
DONE Refactor classes (see the draft in my notepad)
DONE   Remove all the commented-code
  Only leave the minimum members for each class (At this moment we don't need the acceleration for each vehicle for example)
DONE Code Map
DONE Test Map
DONE Minimum test for the Trajectory generation
DONE   straight line in x, y
DONE   straight line in s, d
DONE   spline line in s, d (Q&A Walkthrough)
DONE Code PopulateTraffic in the Road class
DONE Minimum test for PopulateTraffic with stubbed data
DONE   Stub data. 2 or 3 vehicles + ego

DONE Design a generic SplineStrategy for the trajectory generator, so that it generates a trajectory given the starting kinematics, goal point and a reference velocity (add the latter to TrajectoryStrategy). Think about the perturbed goals... who is going to calculate several trajectories and get the best one? Behavior or TrajectoryStrategy? Consider also previous path, we shouldn't stomp on it before getting the next best path...
DONE Code it
DONE Vehicle::UpdateKinematics -> UpdateState? 
DONE  Who should set the current lane for each vehicle? The vehicle itself? or the Road?... Yes, the vehicle can see the road, so the vehicle itself!
DONE Modify stub so that it has frenet data in the environment vehicles
DONE Code road.IsEmpty(s_down, s_up, d_left, d_right)
DONE Code a simple logic to test the lane change with the spline generator (see behavior.cpp UpdateState())
DONE Add d_desired[state] in Behavior class, so that we can set the goal point in the trajectory strategy. Also s_desired ??
DONE Code the lane inside Vehicle::UpdateState()

Code lanes_available detection inside Vehicle::UpdateState()
Update UML
Design high level of the loop of the trajectory generation: 
  Behavior should calculate several trajectories (perturbed goals) for each possible state (d_desired), calculate the cost for each one and keep the best one.
Design CostFunction
Code CostFunction
Code some example of cost function
Test the algorithm
